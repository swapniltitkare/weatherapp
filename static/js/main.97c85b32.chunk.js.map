{"version":3,"sources":["components/Weatherapp.js","App.js","index.js"],"names":["WeatherApp","useState","city","setCity","search","setSearch","useEffect","fetchApi","a","url","fetch","response","json","resJson","main","className","onChange","e","target","value","type","placeholder","autoComplete","temp","temp_min","temp_max","pressure","humidity","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAyDeA,EAtDI,WAGf,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,MAArC,mBAAOG,EAAP,KAAeC,EAAf,KAeA,OAZAC,qBAAU,WACN,IAAMC,EAAQ,uCAAG,gCAAAC,EAAA,6DACPC,EADO,4DACoDL,EADpD,iEAEUM,MAAMD,GAFhB,cAEPE,EAFO,gBAGSA,EAASC,OAHlB,OAGPC,EAHO,OAKbV,EAAQU,EAAQC,MALH,2CAAH,qDAOdP,MACD,CAACH,IAIA,mCACI,sBAAKW,UAAU,WAAf,UACI,uBAAOA,UAAU,cACbC,SAAU,SAACC,GAAQZ,EAAUY,EAAEC,OAAOC,QACtCC,KAAK,SACLD,MAAOf,EACPiB,YAAY,cACZC,aAAa,QAEdpB,EAGC,gCACI,mBAAGa,UAAU,WAAb,oBAA6BX,EAA7B,OAEA,sBAAKW,UAAU,OAAf,UACI,6CAAe,qCAAQb,EAAKqB,KAAb,YAAf,OACA,2CAAa,qCAAQrB,EAAKsB,SAAb,eACb,0CAAY,qCAAQtB,EAAKuB,SAAb,YAAZ,OACA,0CAAY,qCAAQvB,EAAKwB,SAAb,SAAZ,OACA,0CAAY,qCAAQxB,EAAKyB,SAAb,QAAZ,aAVR,mBAAGZ,UAAU,SAAb,mCCtBLa,MARf,WACE,OACE,mCACA,cAAC,EAAD,OCDJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.97c85b32.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../Weatherapp.css';\r\n\r\nconst WeatherApp = () => {\r\n\r\n\r\n    const [city, setCity] = useState(null);\r\n    const [search, setSearch] = useState(null);\r\n    // const [country, setCountry] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchApi = async () => {\r\n            const url = `https://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=46c26c14aeb567380fad3e9cec002150`;\r\n            const response = await fetch(url);\r\n            const resJson = await response.json();\r\n            // setCountry(resJson.sys);\r\n            setCity(resJson.main);\r\n        }\r\n        fetchApi();\r\n    }, [search])\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='main_div'>\r\n                <input className='input_field'\r\n                    onChange={(e) => { setSearch(e.target.value) }}\r\n                    type='search'\r\n                    value={search}\r\n                    placeholder='Search City'\r\n                    autoComplete='off' />\r\n\r\n                {(!city ) ? (\r\n                    <p className='Nodata'> No City Found </p>\r\n                ) : (\r\n                    <div>\r\n                        <p className='cityName'>{` ${search} `}</p>\r\n\r\n                        <div className='info'>\r\n                            <p>Temperature <span> {city.temp}°C </span> </p>\r\n                            <p>Min-Temp  <span> {city.temp_min}°C </span></p>\r\n                            <p>Max-Temp <span> {city.temp_max}°C </span> </p>\r\n                            <p>Pressure <span> {city.pressure}mb </span> </p>\r\n                            <p>Humidity <span> {city.humidity}% </span> </p>\r\n\r\n                        </div>\r\n                    </div>\r\n                )\r\n                }\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default WeatherApp;","import './App.css';\nimport WeatherApp from './components/Weatherapp';\n\nfunction App() {\n  return (\n    <>\n    <WeatherApp/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}